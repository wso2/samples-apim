/*
 * generated by Xtext 2.25.0
 */
grammar InternalGraphQL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.intuit.graphql.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.intuit.graphql.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.intuit.graphql.services.GraphQLGrammarAccess;

}

@parser::members {

 	private GraphQLGrammarAccess grammarAccess;

    public InternalGraphQLParser(TokenStream input, GraphQLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Document";
   	}

   	@Override
   	protected GraphQLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDocument
entryRuleDocument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocumentRule()); }
	iv_ruleDocument=ruleDocument
	{ $current=$iv_ruleDocument.current; }
	EOF;

// Rule Document
ruleDocument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDocumentAccess().getQueryParserRuleCall_0());
		}
		this_Query_0=ruleQuery
		{
			$current = $this_Query_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDocumentAccess().getTypeSystemParserRuleCall_1());
		}
		this_TypeSystem_1=ruleTypeSystem
		{
			$current = $this_TypeSystem_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQuery
entryRuleQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryRule()); }
	iv_ruleQuery=ruleQuery
	{ $current=$iv_ruleQuery.current; }
	EOF;

// Rule Query
ruleQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getQueryAccess().getQueryDefinitionQueryDefinitionParserRuleCall_0());
			}
			lv_queryDefinition_0_0=ruleQueryDefinition
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getQueryRule());
				}
				add(
					$current,
					"queryDefinition",
					lv_queryDefinition_0_0,
					"com.intuit.graphql.GraphQL.QueryDefinition");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleQueryDefinition
entryRuleQueryDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryDefinitionRule()); }
	iv_ruleQueryDefinition=ruleQueryDefinition
	{ $current=$iv_ruleQueryDefinition.current; }
	EOF;

// Rule QueryDefinition
ruleQueryDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getQueryDefinitionAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQueryDefinitionRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getQueryDefinitionAccess().getOpOperationDefinitionParserRuleCall_1_0_0());
					}
					lv_op_1_0=ruleOperationDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQueryDefinitionRule());
						}
						set(
							$current,
							"op",
							lv_op_1_0,
							"com.intuit.graphql.GraphQL.OperationDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getQueryDefinitionAccess().getFragFragmentDefinitionParserRuleCall_1_1_0());
					}
					lv_frag_2_0=ruleFragmentDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQueryDefinitionRule());
						}
						set(
							$current,
							"frag",
							lv_frag_2_0,
							"com.intuit.graphql.GraphQL.FragmentDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOperationDefinition
entryRuleOperationDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefinitionRule()); }
	iv_ruleOperationDefinition=ruleOperationDefinition
	{ $current=$iv_ruleOperationDefinition.current; }
	EOF;

// Rule OperationDefinition
ruleOperationDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationDefinitionAccess().getSelectionSetParserRuleCall_0());
		}
		this_SelectionSet_0=ruleSelectionSet
		{
			$current = $this_SelectionSet_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationDefinitionAccess().getOperationTypeOperationTypeEnumRuleCall_1_0_0());
					}
					lv_operationType_1_0=ruleOperationType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationDefinitionRule());
						}
						set(
							$current,
							"operationType",
							lv_operationType_1_0,
							"com.intuit.graphql.GraphQL.OperationType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationDefinitionAccess().getNameNameParserRuleCall_1_1_0());
					}
					lv_name_2_0=ruleName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationDefinitionRule());
						}
						set(
							$current,
							"name",
							lv_name_2_0,
							"com.intuit.graphql.GraphQL.Name");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationDefinitionAccess().getVariableDefinitionsVariableDefinitionsParserRuleCall_1_2_0());
					}
					lv_variableDefinitions_3_0=ruleVariableDefinitions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationDefinitionRule());
						}
						set(
							$current,
							"variableDefinitions",
							lv_variableDefinitions_3_0,
							"com.intuit.graphql.GraphQL.VariableDefinitions");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationDefinitionAccess().getDirectivesQDirectiveParserRuleCall_1_3_0());
					}
					lv_directives_4_0=ruleQDirective
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationDefinitionRule());
						}
						add(
							$current,
							"directives",
							lv_directives_4_0,
							"com.intuit.graphql.GraphQL.QDirective");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationDefinitionAccess().getSelectionSetSelectionSetParserRuleCall_1_4_0());
					}
					lv_selectionSet_5_0=ruleSelectionSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationDefinitionRule());
						}
						set(
							$current,
							"selectionSet",
							lv_selectionSet_5_0,
							"com.intuit.graphql.GraphQL.SelectionSet");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleVariableDefinitions
entryRuleVariableDefinitions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDefinitionsRule()); }
	iv_ruleVariableDefinitions=ruleVariableDefinitions
	{ $current=$iv_ruleVariableDefinitions.current; }
	EOF;

// Rule VariableDefinitions
ruleVariableDefinitions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableDefinitionsAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDefinitionsAccess().getVariableDefinitionVariableDefinitionParserRuleCall_1_0());
				}
				lv_variableDefinition_1_0=ruleVariableDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDefinitionsRule());
					}
					add(
						$current,
						"variableDefinition",
						lv_variableDefinition_1_0,
						"com.intuit.graphql.GraphQL.VariableDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableDefinitionsAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleVariableDefinition
entryRuleVariableDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDefinitionRule()); }
	iv_ruleVariableDefinition=ruleVariableDefinition
	{ $current=$iv_ruleVariableDefinition.current; }
	EOF;

// Rule VariableDefinition
ruleVariableDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDefinitionAccess().getVariableVariableParserRuleCall_0_0());
				}
				lv_variable_0_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDefinitionRule());
					}
					set(
						$current,
						"variable",
						lv_variable_0_0,
						"com.intuit.graphql.GraphQL.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getVariableDefinitionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDefinitionAccess().getTypeQTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleQType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDefinitionRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"com.intuit.graphql.GraphQL.QType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getVariableDefinitionAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableDefinitionAccess().getDefaultValueValueParserRuleCall_3_1_0());
					}
					lv_defaultValue_4_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableDefinitionRule());
						}
						set(
							$current,
							"defaultValue",
							lv_defaultValue_4_0,
							"com.intuit.graphql.GraphQL.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDefinitionAccess().getDirectivesQDirectiveParserRuleCall_4_0());
				}
				lv_directives_5_0=ruleQDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_5_0,
						"com.intuit.graphql.GraphQL.QDirective");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getVariableDefinitionAccess().getCommaKeyword_5());
			}
		)?
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='$'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getDollarSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSelectionSet
entryRuleSelectionSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectionSetRule()); }
	iv_ruleSelectionSet=ruleSelectionSet
	{ $current=$iv_ruleSelectionSet.current; }
	EOF;

// Rule SelectionSet
ruleSelectionSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectionSetAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectionSetAccess().getSelectionSelectionParserRuleCall_1_0());
				}
				lv_selection_1_0=ruleSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectionSetRule());
					}
					add(
						$current,
						"selection",
						lv_selection_1_0,
						"com.intuit.graphql.GraphQL.Selection");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getSelectionSetAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleSelection
entryRuleSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectionRule()); }
	iv_ruleSelection=ruleSelection
	{ $current=$iv_ruleSelection.current; }
	EOF;

// Rule Selection
ruleSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSelectionAccess().getFFieldParserRuleCall_0());
		}
		this_FField_0=ruleFField
		{
			$current = $this_FField_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSelectionAccess().getFragmentSpreadParserRuleCall_1());
		}
		this_FragmentSpread_1=ruleFragmentSpread
		{
			$current = $this_FragmentSpread_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSelectionAccess().getInlineFragmentParserRuleCall_2());
		}
		this_InlineFragment_2=ruleInlineFragment
		{
			$current = $this_InlineFragment_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFField
entryRuleFField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFFieldRule()); }
	iv_ruleFField=ruleFField
	{ $current=$iv_ruleFField.current; }
	EOF;

// Rule FField
ruleFField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFFieldAccess().getAliasParserRuleCall_0());
			}
			this_alias_0=rulealias
			{
				$current = $this_alias_0.current;
				afterParserOrEnumRuleCall();
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFFieldAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFFieldRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFFieldRule());
				}
				newCompositeNode(grammarAccess.getFFieldAccess().getArgumentsParserRuleCall_2());
			}
			this_Arguments_2=ruleArguments[$current]
			{
				$current = $this_Arguments_2.current;
				afterParserOrEnumRuleCall();
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFFieldAccess().getDirectivesQDirectiveParserRuleCall_3_0());
				}
				lv_directives_3_0=ruleQDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFFieldRule());
					}
					add(
						$current,
						"directives",
						lv_directives_3_0,
						"com.intuit.graphql.GraphQL.QDirective");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getFFieldAccess().getSelectionSetSelectionSetParserRuleCall_4_0());
				}
				lv_selectionSet_4_0=ruleSelectionSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFFieldRule());
					}
					set(
						$current,
						"selectionSet",
						lv_selectionSet_4_0,
						"com.intuit.graphql.GraphQL.SelectionSet");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRulealias
entryRulealias returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasRule()); }
	iv_rulealias=rulealias
	{ $current=$iv_rulealias.current; }
	EOF;

// Rule alias
rulealias returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_ID
				{
					newLeafNode(lv_id_0_0, grammarAccess.getAliasAccess().getIdIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAliasRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"com.intuit.graphql.GraphQL.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAliasAccess().getColonKeyword_1());
		}
	)
;


// Rule Arguments
ruleArguments[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_1_0());
				}
				lv_arguments_1_0=ruleArgument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentsRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_1_0,
						"com.intuit.graphql.GraphQL.Argument");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	iv_ruleArgument=ruleArgument
	{ $current=$iv_ruleArgument.current; }
	EOF;

// Rule Argument
ruleArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentAccess().getNameNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getArgumentAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentAccess().getValueWithVariableValueWithVariableParserRuleCall_2_0());
				}
				lv_valueWithVariable_2_0=ruleValueWithVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentRule());
					}
					set(
						$current,
						"valueWithVariable",
						lv_valueWithVariable_2_0,
						"com.intuit.graphql.GraphQL.ValueWithVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getArgumentAccess().getCommaKeyword_3());
			}
		)?
	)
;

// Entry rule entryRuleFragmentSpread
entryRuleFragmentSpread returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFragmentSpreadRule()); }
	iv_ruleFragmentSpread=ruleFragmentSpread
	{ $current=$iv_ruleFragmentSpread.current; }
	EOF;

// Rule FragmentSpread
ruleFragmentSpread returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='...'
		{
			newLeafNode(otherlv_0, grammarAccess.getFragmentSpreadAccess().getFullStopFullStopFullStopKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFragmentSpreadRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFragmentSpreadAccess().getFragmentDefinitionFragmentDefinitionCrossReference_1_0());
				}
				ruleName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFragmentSpreadAccess().getDirectivesQDirectiveParserRuleCall_2_0());
				}
				lv_directives_2_0=ruleQDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFragmentSpreadRule());
					}
					add(
						$current,
						"directives",
						lv_directives_2_0,
						"com.intuit.graphql.GraphQL.QDirective");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleInlineFragment
entryRuleInlineFragment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInlineFragmentRule()); }
	iv_ruleInlineFragment=ruleInlineFragment
	{ $current=$iv_ruleInlineFragment.current; }
	EOF;

// Rule InlineFragment
ruleInlineFragment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='...'
		{
			newLeafNode(otherlv_0, grammarAccess.getInlineFragmentAccess().getFullStopFullStopFullStopKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInlineFragmentAccess().getTypeConditionTypeConditionParserRuleCall_1_0());
				}
				lv_typeCondition_1_0=ruleTypeCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInlineFragmentRule());
					}
					set(
						$current,
						"typeCondition",
						lv_typeCondition_1_0,
						"com.intuit.graphql.GraphQL.TypeCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getInlineFragmentAccess().getDirectivesQDirectiveParserRuleCall_2_0());
				}
				lv_directives_2_0=ruleQDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInlineFragmentRule());
					}
					add(
						$current,
						"directives",
						lv_directives_2_0,
						"com.intuit.graphql.GraphQL.QDirective");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getInlineFragmentAccess().getSelectionSetSelectionSetParserRuleCall_3_0());
				}
				lv_selectionSet_3_0=ruleSelectionSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInlineFragmentRule());
					}
					set(
						$current,
						"selectionSet",
						lv_selectionSet_3_0,
						"com.intuit.graphql.GraphQL.SelectionSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFragmentDefinition
entryRuleFragmentDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFragmentDefinitionRule()); }
	iv_ruleFragmentDefinition=ruleFragmentDefinition
	{ $current=$iv_ruleFragmentDefinition.current; }
	EOF;

// Rule FragmentDefinition
ruleFragmentDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='fragment'
		{
			newLeafNode(otherlv_0, grammarAccess.getFragmentDefinitionAccess().getFragmentKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFragmentDefinitionAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFragmentDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFragmentDefinitionAccess().getTypeConditionTypeConditionParserRuleCall_2_0());
				}
				lv_typeCondition_2_0=ruleTypeCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFragmentDefinitionRule());
					}
					set(
						$current,
						"typeCondition",
						lv_typeCondition_2_0,
						"com.intuit.graphql.GraphQL.TypeCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFragmentDefinitionAccess().getDirectivesQDirectiveParserRuleCall_3_0());
				}
				lv_directives_3_0=ruleQDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFragmentDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_3_0,
						"com.intuit.graphql.GraphQL.QDirective");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getFragmentDefinitionAccess().getSelectionSetSelectionSetParserRuleCall_4_0());
				}
				lv_selectionSet_4_0=ruleSelectionSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFragmentDefinitionRule());
					}
					set(
						$current,
						"selectionSet",
						lv_selectionSet_4_0,
						"com.intuit.graphql.GraphQL.SelectionSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeCondition
entryRuleTypeCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeConditionRule()); }
	iv_ruleTypeCondition=ruleTypeCondition
	{ $current=$iv_ruleTypeCondition.current; }
	EOF;

// Rule TypeCondition
ruleTypeCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='on'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeConditionAccess().getOnKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeConditionAccess().getNamedTypeNameParserRuleCall_1_0());
				}
				lv_namedType_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeConditionRule());
					}
					set(
						$current,
						"namedType",
						lv_namedType_1_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleName
entryRuleName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	iv_ruleName=ruleName
	{ $current=$iv_ruleName.current.getText(); }
	EOF;

// Rule Name
ruleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getNameAccess().getIDTerminalRuleCall_0());
		}
		    |
		kw='type'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getTypeKeyword_1());
		}
		    |
		kw='fragment'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getFragmentKeyword_2());
		}
		    |
		kw='query'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getQueryKeyword_3());
		}
		    |
		kw='mutation'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getMutationKeyword_4());
		}
		    |
		kw='subscription'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getSubscriptionKeyword_5());
		}
		    |
		kw='schema'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getSchemaKeyword_6());
		}
		    |
		kw='scalar'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getScalarKeyword_7());
		}
		    |
		kw='interface'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getInterfaceKeyword_8());
		}
		    |
		kw='implements'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getImplementsKeyword_9());
		}
		    |
		kw='enum'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getEnumKeyword_10());
		}
		    |
		kw='union'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getUnionKeyword_11());
		}
		    |
		kw='input'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getInputKeyword_12());
		}
		    |
		kw='extend'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getExtendKeyword_13());
		}
		    |
		kw='directive'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getDirectiveKeyword_14());
		}
		    |
		kw='Long'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getLongKeyword_15());
		}
		    |
		kw='BigInteger'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getBigIntegerKeyword_16());
		}
		    |
		kw='BigDecimal'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getBigDecimalKeyword_17());
		}
		    |
		kw='Short'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getShortKeyword_18());
		}
		    |
		kw='Char'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getCharKeyword_19());
		}
		    |
		kw='Byte'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getByteKeyword_20());
		}
		    |
		kw='ID'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getIDKeyword_21());
		}
		    |
		kw='String'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getStringKeyword_22());
		}
		    |
		kw='Int'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getIntKeyword_23());
		}
		    |
		kw='Float'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getFloatKeyword_24());
		}
		    |
		kw='Boolean'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNameAccess().getBooleanKeyword_25());
		}
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getNullValueNullValueParserRuleCall_0_0());
				}
				lv_nullValue_0_0=ruleNullValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"nullValue",
						lv_nullValue_0_0,
						"com.intuit.graphql.GraphQL.NullValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getIntValueIntValueParserRuleCall_1_0());
				}
				lv_intValue_1_0=ruleIntValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"intValue",
						lv_intValue_1_0,
						"com.intuit.graphql.GraphQL.IntValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getFloatValueFloatValueParserRuleCall_2_0());
				}
				lv_floatValue_2_0=ruleFloatValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"floatValue",
						lv_floatValue_2_0,
						"com.intuit.graphql.GraphQL.FloatValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getBoolValueBooleanValueParserRuleCall_3_0());
				}
				lv_boolValue_3_0=ruleBooleanValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"boolValue",
						lv_boolValue_3_0,
						"com.intuit.graphql.GraphQL.BooleanValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getStringValueStringValueParserRuleCall_4_0());
				}
				lv_stringValue_4_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"stringValue",
						lv_stringValue_4_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getEnumValueEnumValueParserRuleCall_5_0());
				}
				lv_enumValue_5_0=ruleEnumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"enumValue",
						lv_enumValue_5_0,
						"com.intuit.graphql.GraphQL.EnumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getArrayValueArrayValueParserRuleCall_6_0());
				}
				lv_arrayValue_6_0=ruleArrayValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"arrayValue",
						lv_arrayValue_6_0,
						"com.intuit.graphql.GraphQL.ArrayValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getObjectValueObjectValueParserRuleCall_7_0());
				}
				lv_objectValue_7_0=ruleObjectValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"objectValue",
						lv_objectValue_7_0,
						"com.intuit.graphql.GraphQL.ObjectValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleValueWithVariable
entryRuleValueWithVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueWithVariableRule()); }
	iv_ruleValueWithVariable=ruleValueWithVariable
	{ $current=$iv_ruleValueWithVariable.current; }
	EOF;

// Rule ValueWithVariable
ruleValueWithVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithVariableAccess().getNullValueNullValueParserRuleCall_0_0());
				}
				lv_nullValue_0_0=ruleNullValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithVariableRule());
					}
					set(
						$current,
						"nullValue",
						lv_nullValue_0_0,
						"com.intuit.graphql.GraphQL.NullValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithVariableAccess().getIntValueIntValueParserRuleCall_1_0());
				}
				lv_intValue_1_0=ruleIntValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithVariableRule());
					}
					set(
						$current,
						"intValue",
						lv_intValue_1_0,
						"com.intuit.graphql.GraphQL.IntValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithVariableAccess().getFloatValueFloatValueParserRuleCall_2_0());
				}
				lv_floatValue_2_0=ruleFloatValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithVariableRule());
					}
					set(
						$current,
						"floatValue",
						lv_floatValue_2_0,
						"com.intuit.graphql.GraphQL.FloatValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithVariableAccess().getBoolValueBooleanValueParserRuleCall_3_0());
				}
				lv_boolValue_3_0=ruleBooleanValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithVariableRule());
					}
					set(
						$current,
						"boolValue",
						lv_boolValue_3_0,
						"com.intuit.graphql.GraphQL.BooleanValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithVariableAccess().getStringValueStringValueParserRuleCall_4_0());
				}
				lv_stringValue_4_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithVariableRule());
					}
					set(
						$current,
						"stringValue",
						lv_stringValue_4_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithVariableAccess().getEnumValueEnumValueParserRuleCall_5_0());
				}
				lv_enumValue_5_0=ruleEnumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithVariableRule());
					}
					set(
						$current,
						"enumValue",
						lv_enumValue_5_0,
						"com.intuit.graphql.GraphQL.EnumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithVariableAccess().getVariableVariableParserRuleCall_6_0());
				}
				lv_variable_6_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithVariableRule());
					}
					set(
						$current,
						"variable",
						lv_variable_6_0,
						"com.intuit.graphql.GraphQL.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithVariableAccess().getObjectValueWithVariableObjectValueWithVariableParserRuleCall_7_0());
				}
				lv_objectValueWithVariable_7_0=ruleObjectValueWithVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithVariableRule());
					}
					set(
						$current,
						"objectValueWithVariable",
						lv_objectValueWithVariable_7_0,
						"com.intuit.graphql.GraphQL.ObjectValueWithVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueWithVariableAccess().getArrayValueWithVariableArrayValueWithVariableParserRuleCall_8_0());
				}
				lv_arrayValueWithVariable_8_0=ruleArrayValueWithVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueWithVariableRule());
					}
					set(
						$current,
						"arrayValueWithVariable",
						lv_arrayValueWithVariable_8_0,
						"com.intuit.graphql.GraphQL.ArrayValueWithVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnumValue
entryRuleEnumValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEnumValueRule()); }
	iv_ruleEnumValue=ruleEnumValue
	{ $current=$iv_ruleEnumValue.current.getText(); }
	EOF;

// Rule EnumValue
ruleEnumValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getEnumValueAccess().getNameParserRuleCall());
	}
	this_Name_0=ruleName
	{
		$current.merge(this_Name_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleArrayValue
entryRuleArrayValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayValueRule()); }
	iv_ruleArrayValue=ruleArrayValue
	{ $current=$iv_ruleArrayValue.current; }
	EOF;

// Rule ArrayValue
ruleArrayValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getArrayValueAccess().getArrayValueAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getArrayValueAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayValueAccess().getValueValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayValueRule());
					}
					add(
						$current,
						"value",
						lv_value_2_0,
						"com.intuit.graphql.GraphQL.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getArrayValueAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleArrayValueWithVariable
entryRuleArrayValueWithVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayValueWithVariableRule()); }
	iv_ruleArrayValueWithVariable=ruleArrayValueWithVariable
	{ $current=$iv_ruleArrayValueWithVariable.current; }
	EOF;

// Rule ArrayValueWithVariable
ruleArrayValueWithVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getArrayValueWithVariableAccess().getArrayValueWithVariableAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getArrayValueWithVariableAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayValueWithVariableAccess().getValueWithVariableValueWithVariableParserRuleCall_2_0());
				}
				lv_valueWithVariable_2_0=ruleValueWithVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayValueWithVariableRule());
					}
					add(
						$current,
						"valueWithVariable",
						lv_valueWithVariable_2_0,
						"com.intuit.graphql.GraphQL.ValueWithVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getArrayValueWithVariableAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleObjectValue
entryRuleObjectValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectValueRule()); }
	iv_ruleObjectValue=ruleObjectValue
	{ $current=$iv_ruleObjectValue.current; }
	EOF;

// Rule ObjectValue
ruleObjectValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getObjectValueAccess().getObjectValueAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getObjectValueAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectValueAccess().getObjectFieldObjectFieldParserRuleCall_2_0());
				}
				lv_objectField_2_0=ruleObjectField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectValueRule());
					}
					add(
						$current,
						"objectField",
						lv_objectField_2_0,
						"com.intuit.graphql.GraphQL.ObjectField");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getObjectValueAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleObjectValueWithVariable
entryRuleObjectValueWithVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectValueWithVariableRule()); }
	iv_ruleObjectValueWithVariable=ruleObjectValueWithVariable
	{ $current=$iv_ruleObjectValueWithVariable.current; }
	EOF;

// Rule ObjectValueWithVariable
ruleObjectValueWithVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getObjectValueWithVariableAccess().getObjectValueWithVariableAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getObjectValueWithVariableAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectValueWithVariableAccess().getObjectFieldWithVariableObjectFieldWithVariableParserRuleCall_2_0());
				}
				lv_objectFieldWithVariable_2_0=ruleObjectFieldWithVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectValueWithVariableRule());
					}
					add(
						$current,
						"objectFieldWithVariable",
						lv_objectFieldWithVariable_2_0,
						"com.intuit.graphql.GraphQL.ObjectFieldWithVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getObjectValueWithVariableAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleObjectField
entryRuleObjectField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectFieldRule()); }
	iv_ruleObjectField=ruleObjectField
	{ $current=$iv_ruleObjectField.current; }
	EOF;

// Rule ObjectField
ruleObjectField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectFieldAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectFieldRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectFieldAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectFieldRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getObjectFieldAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectFieldAccess().getValueValueParserRuleCall_3_0());
				}
				lv_value_3_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectFieldRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"com.intuit.graphql.GraphQL.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getObjectFieldAccess().getCommaKeyword_4());
			}
		)?
	)
;

// Entry rule entryRuleObjectFieldWithVariable
entryRuleObjectFieldWithVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectFieldWithVariableRule()); }
	iv_ruleObjectFieldWithVariable=ruleObjectFieldWithVariable
	{ $current=$iv_ruleObjectFieldWithVariable.current; }
	EOF;

// Rule ObjectFieldWithVariable
ruleObjectFieldWithVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectFieldWithVariableAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectFieldWithVariableRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectFieldWithVariableAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectFieldWithVariableRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getObjectFieldWithVariableAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectFieldWithVariableAccess().getValueWithVariableValueWithVariableParserRuleCall_3_0());
				}
				lv_valueWithVariable_3_0=ruleValueWithVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectFieldWithVariableRule());
					}
					set(
						$current,
						"valueWithVariable",
						lv_valueWithVariable_3_0,
						"com.intuit.graphql.GraphQL.ValueWithVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getObjectFieldWithVariableAccess().getCommaKeyword_4());
			}
		)?
	)
;

// Entry rule entryRuleQType
entryRuleQType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQTypeRule()); }
	iv_ruleQType=ruleQType
	{ $current=$iv_ruleQType.current; }
	EOF;

// Rule QType
ruleQType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getQTypeAccess().getQNameTypeParserRuleCall_0_0());
			}
			this_QNameType_0=ruleQNameType
			{
				$current = $this_QNameType_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getQTypeAccess().getQListTypeParserRuleCall_0_1());
			}
			this_QListType_1=ruleQListType
			{
				$current = $this_QListType_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				lv_nonNull_2_0='!'
				{
					newLeafNode(lv_nonNull_2_0, grammarAccess.getQTypeAccess().getNonNullExclamationMarkKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQTypeRule());
					}
					setWithLastConsumed($current, "nonNull", lv_nonNull_2_0 != null, "!");
				}
			)
		)?
	)
;

// Entry rule entryRuleQNameType
entryRuleQNameType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQNameTypeRule()); }
	iv_ruleQNameType=ruleQNameType
	{ $current=$iv_ruleQNameType.current; }
	EOF;

// Rule QNameType
ruleQNameType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getQNameTypeAccess().getTypeNameParserRuleCall_0());
			}
			lv_type_0_0=ruleName
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getQNameTypeRule());
				}
				set(
					$current,
					"type",
					lv_type_0_0,
					"com.intuit.graphql.GraphQL.Name");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleQListType
entryRuleQListType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQListTypeRule()); }
	iv_ruleQListType=ruleQListType
	{ $current=$iv_ruleQListType.current; }
	EOF;

// Rule QListType
ruleQListType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getQListTypeAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQListTypeAccess().getTypeQTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleQType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQListTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"com.intuit.graphql.GraphQL.QType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getQListTypeAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleNamedType
entryRuleNamedType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamedTypeRule()); }
	iv_ruleNamedType=ruleNamedType
	{ $current=$iv_ruleNamedType.current; }
	EOF;

// Rule NamedType
ruleNamedType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNamedTypeAccess().getPrimitiveTypeParserRuleCall_0_0());
			}
			this_PrimitiveType_0=rulePrimitiveType
			{
				$current = $this_PrimitiveType_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getNamedTypeAccess().getObjectTypeParserRuleCall_0_1());
			}
			this_ObjectType_1=ruleObjectType
			{
				$current = $this_ObjectType_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getNamedTypeAccess().getListTypeParserRuleCall_0_2());
			}
			this_ListType_2=ruleListType
			{
				$current = $this_ListType_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				lv_nonNull_3_0='!'
				{
					newLeafNode(lv_nonNull_3_0, grammarAccess.getNamedTypeAccess().getNonNullExclamationMarkKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNamedTypeRule());
					}
					setWithLastConsumed($current, "nonNull", lv_nonNull_3_0 != null, "!");
				}
			)
		)?
	)
;

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeRule()); }
	iv_rulePrimitiveType=rulePrimitiveType
	{ $current=$iv_rulePrimitiveType.current; }
	EOF;

// Rule PrimitiveType
rulePrimitiveType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1='String'
				{
					newLeafNode(lv_type_0_1, grammarAccess.getPrimitiveTypeAccess().getTypeStringKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2='Int'
				{
					newLeafNode(lv_type_0_2, grammarAccess.getPrimitiveTypeAccess().getTypeIntKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3='Float'
				{
					newLeafNode(lv_type_0_3, grammarAccess.getPrimitiveTypeAccess().getTypeFloatKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
				    |
				lv_type_0_4='Boolean'
				{
					newLeafNode(lv_type_0_4, grammarAccess.getPrimitiveTypeAccess().getTypeBooleanKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_4, null);
				}
				    |
				lv_type_0_5='ID'
				{
					newLeafNode(lv_type_0_5, grammarAccess.getPrimitiveTypeAccess().getTypeIDKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_5, null);
				}
				    |
				lv_type_0_6='Long'
				{
					newLeafNode(lv_type_0_6, grammarAccess.getPrimitiveTypeAccess().getTypeLongKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_6, null);
				}
				    |
				lv_type_0_7='BigInteger'
				{
					newLeafNode(lv_type_0_7, grammarAccess.getPrimitiveTypeAccess().getTypeBigIntegerKeyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_7, null);
				}
				    |
				lv_type_0_8='BigDecimal'
				{
					newLeafNode(lv_type_0_8, grammarAccess.getPrimitiveTypeAccess().getTypeBigDecimalKeyword_0_7());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_8, null);
				}
				    |
				lv_type_0_9='Short'
				{
					newLeafNode(lv_type_0_9, grammarAccess.getPrimitiveTypeAccess().getTypeShortKeyword_0_8());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_9, null);
				}
				    |
				lv_type_0_10='Char'
				{
					newLeafNode(lv_type_0_10, grammarAccess.getPrimitiveTypeAccess().getTypeCharKeyword_0_9());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_10, null);
				}
				    |
				lv_type_0_11='Byte'
				{
					newLeafNode(lv_type_0_11, grammarAccess.getPrimitiveTypeAccess().getTypeByteKeyword_0_10());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveTypeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_11, null);
				}
			)
		)
	)
;

// Entry rule entryRuleObjectType
entryRuleObjectType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectTypeRule()); }
	iv_ruleObjectType=ruleObjectType
	{ $current=$iv_ruleObjectType.current; }
	EOF;

// Rule ObjectType
ruleObjectType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getObjectTypeRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getObjectTypeAccess().getTypeTypeDefinitionCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleListType
entryRuleListType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListTypeRule()); }
	iv_ruleListType=ruleListType
	{ $current=$iv_ruleListType.current; }
	EOF;

// Rule ListType
ruleListType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getListTypeAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListTypeAccess().getTypeNamedTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleNamedType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"com.intuit.graphql.GraphQL.NamedType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getListTypeAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleTypeSystem
entryRuleTypeSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSystemRule()); }
	iv_ruleTypeSystem=ruleTypeSystem
	{ $current=$iv_ruleTypeSystem.current; }
	EOF;

// Rule TypeSystem
ruleTypeSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTypeSystemAccess().getTypeSystemDefinitionTypeSystemDefinitionParserRuleCall_0());
			}
			lv_typeSystemDefinition_0_0=ruleTypeSystemDefinition
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTypeSystemRule());
				}
				add(
					$current,
					"typeSystemDefinition",
					lv_typeSystemDefinition_0_0,
					"com.intuit.graphql.GraphQL.TypeSystemDefinition");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleTypeSystemDefinition
entryRuleTypeSystemDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSystemDefinitionRule()); }
	iv_ruleTypeSystemDefinition=ruleTypeSystemDefinition
	{ $current=$iv_ruleTypeSystemDefinition.current; }
	EOF;

// Rule TypeSystemDefinition
ruleTypeSystemDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSystemDefinitionAccess().getSchemaSchemaDefinitionParserRuleCall_0_0());
				}
				lv_schema_0_0=ruleSchemaDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSystemDefinitionRule());
					}
					set(
						$current,
						"schema",
						lv_schema_0_0,
						"com.intuit.graphql.GraphQL.SchemaDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSystemDefinitionAccess().getTypeTypeDefinitionParserRuleCall_1_0());
				}
				lv_type_1_0=ruleTypeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSystemDefinitionRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"com.intuit.graphql.GraphQL.TypeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSystemDefinitionAccess().getTypeExtensionTypeExtensionDefinitionParserRuleCall_2_0());
				}
				lv_typeExtension_2_0=ruleTypeExtensionDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSystemDefinitionRule());
					}
					set(
						$current,
						"typeExtension",
						lv_typeExtension_2_0,
						"com.intuit.graphql.GraphQL.TypeExtensionDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSystemDefinitionAccess().getDirectiveDirectiveDefinitionParserRuleCall_3_0());
				}
				lv_directive_3_0=ruleDirectiveDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSystemDefinitionRule());
					}
					set(
						$current,
						"directive",
						lv_directive_3_0,
						"com.intuit.graphql.GraphQL.DirectiveDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSchemaDefinition
entryRuleSchemaDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchemaDefinitionRule()); }
	iv_ruleSchemaDefinition=ruleSchemaDefinition
	{ $current=$iv_ruleSchemaDefinition.current; }
	EOF;

// Rule SchemaDefinition
ruleSchemaDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaDefinitionAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaDefinitionRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='schema'
		{
			newLeafNode(otherlv_1, grammarAccess.getSchemaDefinitionAccess().getSchemaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaDefinitionAccess().getDirectivesDirectiveParserRuleCall_2_0());
				}
				lv_directives_2_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_2_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSchemaDefinitionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaDefinitionAccess().getOperationTypeDefinitionOperationTypeDefinitionParserRuleCall_4_0());
				}
				lv_operationTypeDefinition_4_0=ruleOperationTypeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaDefinitionRule());
					}
					add(
						$current,
						"operationTypeDefinition",
						lv_operationTypeDefinition_4_0,
						"com.intuit.graphql.GraphQL.OperationTypeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSchemaDefinitionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleOperationTypeDefinition
entryRuleOperationTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationTypeDefinitionRule()); }
	iv_ruleOperationTypeDefinition=ruleOperationTypeDefinition
	{ $current=$iv_ruleOperationTypeDefinition.current; }
	EOF;

// Rule OperationTypeDefinition
ruleOperationTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationTypeDefinitionAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationTypeDefinitionRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationTypeDefinitionAccess().getOperationTypeOperationTypeEnumRuleCall_1_0());
				}
				lv_operationType_1_0=ruleOperationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationTypeDefinitionRule());
					}
					set(
						$current,
						"operationType",
						lv_operationType_1_0,
						"com.intuit.graphql.GraphQL.OperationType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getOperationTypeDefinitionAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationTypeDefinitionAccess().getNamedTypeNamedTypeParserRuleCall_3_0());
				}
				lv_namedType_3_0=ruleNamedType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationTypeDefinitionRule());
					}
					set(
						$current,
						"namedType",
						lv_namedType_3_0,
						"com.intuit.graphql.GraphQL.NamedType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getOperationTypeDefinitionAccess().getCommaKeyword_4());
			}
		)?
	)
;

// Entry rule entryRuleTypeDefinition
entryRuleTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDefinitionRule()); }
	iv_ruleTypeDefinition=ruleTypeDefinition
	{ $current=$iv_ruleTypeDefinition.current; }
	EOF;

// Rule TypeDefinition
ruleTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeDefinitionAccess().getScalarTypeDefinitionParserRuleCall_0());
		}
		this_ScalarTypeDefinition_0=ruleScalarTypeDefinition
		{
			$current = $this_ScalarTypeDefinition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeDefinitionAccess().getObjectTypeDefinitionParserRuleCall_1());
		}
		this_ObjectTypeDefinition_1=ruleObjectTypeDefinition
		{
			$current = $this_ObjectTypeDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeDefinitionAccess().getInterfaceTypeDefinitionParserRuleCall_2());
		}
		this_InterfaceTypeDefinition_2=ruleInterfaceTypeDefinition
		{
			$current = $this_InterfaceTypeDefinition_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeDefinitionAccess().getUnionTypeDefinitionParserRuleCall_3());
		}
		this_UnionTypeDefinition_3=ruleUnionTypeDefinition
		{
			$current = $this_UnionTypeDefinition_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeDefinitionAccess().getEnumTypeDefinitionParserRuleCall_4());
		}
		this_EnumTypeDefinition_4=ruleEnumTypeDefinition
		{
			$current = $this_EnumTypeDefinition_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeDefinitionAccess().getInputObjectTypeDefinitionParserRuleCall_5());
		}
		this_InputObjectTypeDefinition_5=ruleInputObjectTypeDefinition
		{
			$current = $this_InputObjectTypeDefinition_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeExtensionDefinition
entryRuleTypeExtensionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeExtensionDefinitionRule()); }
	iv_ruleTypeExtensionDefinition=ruleTypeExtensionDefinition
	{ $current=$iv_ruleTypeExtensionDefinition.current; }
	EOF;

// Rule TypeExtensionDefinition
ruleTypeExtensionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeExtensionDefinitionAccess().getScalarTypeExtensionDefinitionParserRuleCall_0());
		}
		this_ScalarTypeExtensionDefinition_0=ruleScalarTypeExtensionDefinition
		{
			$current = $this_ScalarTypeExtensionDefinition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeExtensionDefinitionAccess().getObjectTypeExtensionDefinitionParserRuleCall_1());
		}
		this_ObjectTypeExtensionDefinition_1=ruleObjectTypeExtensionDefinition
		{
			$current = $this_ObjectTypeExtensionDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeExtensionDefinitionAccess().getInterfaceTypeExtensionDefinitionParserRuleCall_2());
		}
		this_InterfaceTypeExtensionDefinition_2=ruleInterfaceTypeExtensionDefinition
		{
			$current = $this_InterfaceTypeExtensionDefinition_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeExtensionDefinitionAccess().getUnionTypeExtensionDefinitionParserRuleCall_3());
		}
		this_UnionTypeExtensionDefinition_3=ruleUnionTypeExtensionDefinition
		{
			$current = $this_UnionTypeExtensionDefinition_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeExtensionDefinitionAccess().getEnumTypeExtensionDefinitionParserRuleCall_4());
		}
		this_EnumTypeExtensionDefinition_4=ruleEnumTypeExtensionDefinition
		{
			$current = $this_EnumTypeExtensionDefinition_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeExtensionDefinitionAccess().getInputObjectTypeExtensionDefinitionParserRuleCall_5());
		}
		this_InputObjectTypeExtensionDefinition_5=ruleInputObjectTypeExtensionDefinition
		{
			$current = $this_InputObjectTypeExtensionDefinition_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleScalarTypeDefinition
entryRuleScalarTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScalarTypeDefinitionRule()); }
	iv_ruleScalarTypeDefinition=ruleScalarTypeDefinition
	{ $current=$iv_ruleScalarTypeDefinition.current; }
	EOF;

// Rule ScalarTypeDefinition
ruleScalarTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getScalarTypeDefinitionAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScalarTypeDefinitionRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='scalar'
		{
			newLeafNode(otherlv_1, grammarAccess.getScalarTypeDefinitionAccess().getScalarKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScalarTypeDefinitionAccess().getNameNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScalarTypeDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getScalarTypeDefinitionAccess().getDirectivesDirectiveParserRuleCall_3_0());
				}
				lv_directives_3_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScalarTypeDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_3_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleScalarTypeExtensionDefinition
entryRuleScalarTypeExtensionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScalarTypeExtensionDefinitionRule()); }
	iv_ruleScalarTypeExtensionDefinition=ruleScalarTypeExtensionDefinition
	{ $current=$iv_ruleScalarTypeExtensionDefinition.current; }
	EOF;

// Rule ScalarTypeExtensionDefinition
ruleScalarTypeExtensionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extend'
		{
			newLeafNode(otherlv_0, grammarAccess.getScalarTypeExtensionDefinitionAccess().getExtendKeyword_0());
		}
		otherlv_1='scalar'
		{
			newLeafNode(otherlv_1, grammarAccess.getScalarTypeExtensionDefinitionAccess().getScalarKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScalarTypeExtensionDefinitionAccess().getNameNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScalarTypeExtensionDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getScalarTypeExtensionDefinitionAccess().getDirectivesDirectiveParserRuleCall_3_0());
				}
				lv_directives_3_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScalarTypeExtensionDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_3_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleObjectTypeDefinition
entryRuleObjectTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectTypeDefinitionRule()); }
	iv_ruleObjectTypeDefinition=ruleObjectTypeDefinition
	{ $current=$iv_ruleObjectTypeDefinition.current; }
	EOF;

// Rule ObjectTypeDefinition
ruleObjectTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectTypeDefinitionAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectTypeDefinitionRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getObjectTypeDefinitionAccess().getTypeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectTypeDefinitionAccess().getNameNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectTypeDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectTypeDefinitionAccess().getImplementsInterfacesImplementsInterfacesParserRuleCall_3_0());
				}
				lv_implementsInterfaces_3_0=ruleImplementsInterfaces
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectTypeDefinitionRule());
					}
					set(
						$current,
						"implementsInterfaces",
						lv_implementsInterfaces_3_0,
						"com.intuit.graphql.GraphQL.ImplementsInterfaces");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectTypeDefinitionAccess().getDirectivesDirectiveParserRuleCall_4_0());
				}
				lv_directives_4_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectTypeDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_4_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getObjectTypeDefinitionAccess().getLeftCurlyBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getObjectTypeDefinitionAccess().getFieldDefinitionFieldDefinitionParserRuleCall_5_1_0());
					}
					lv_fieldDefinition_6_0=ruleFieldDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObjectTypeDefinitionRule());
						}
						add(
							$current,
							"fieldDefinition",
							lv_fieldDefinition_6_0,
							"com.intuit.graphql.GraphQL.FieldDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getObjectTypeDefinitionAccess().getRightCurlyBracketKeyword_5_2());
			}
		)?
	)
;

// Entry rule entryRuleObjectTypeExtensionDefinition
entryRuleObjectTypeExtensionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectTypeExtensionDefinitionRule()); }
	iv_ruleObjectTypeExtensionDefinition=ruleObjectTypeExtensionDefinition
	{ $current=$iv_ruleObjectTypeExtensionDefinition.current; }
	EOF;

// Rule ObjectTypeExtensionDefinition
ruleObjectTypeExtensionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extend'
		{
			newLeafNode(otherlv_0, grammarAccess.getObjectTypeExtensionDefinitionAccess().getExtendKeyword_0());
		}
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getObjectTypeExtensionDefinitionAccess().getTypeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectTypeExtensionDefinitionAccess().getNameNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectTypeExtensionDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectTypeExtensionDefinitionAccess().getImplementsInterfacesImplementsInterfacesParserRuleCall_3_0());
				}
				lv_implementsInterfaces_3_0=ruleImplementsInterfaces
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectTypeExtensionDefinitionRule());
					}
					set(
						$current,
						"implementsInterfaces",
						lv_implementsInterfaces_3_0,
						"com.intuit.graphql.GraphQL.ImplementsInterfaces");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectTypeExtensionDefinitionAccess().getDirectivesDirectiveParserRuleCall_4_0());
				}
				lv_directives_4_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectTypeExtensionDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_4_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getObjectTypeExtensionDefinitionAccess().getLeftCurlyBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getObjectTypeExtensionDefinitionAccess().getFieldDefinitionFieldDefinitionParserRuleCall_5_1_0());
					}
					lv_fieldDefinition_6_0=ruleFieldDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObjectTypeExtensionDefinitionRule());
						}
						add(
							$current,
							"fieldDefinition",
							lv_fieldDefinition_6_0,
							"com.intuit.graphql.GraphQL.FieldDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getObjectTypeExtensionDefinitionAccess().getRightCurlyBracketKeyword_5_2());
			}
		)?
	)
;

// Entry rule entryRuleInterfaceTypeDefinition
entryRuleInterfaceTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceTypeDefinitionRule()); }
	iv_ruleInterfaceTypeDefinition=ruleInterfaceTypeDefinition
	{ $current=$iv_ruleInterfaceTypeDefinition.current; }
	EOF;

// Rule InterfaceTypeDefinition
ruleInterfaceTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceTypeDefinitionAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceTypeDefinitionRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='interface'
		{
			newLeafNode(otherlv_1, grammarAccess.getInterfaceTypeDefinitionAccess().getInterfaceKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceTypeDefinitionAccess().getNameNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceTypeDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceTypeDefinitionAccess().getImplementsInterfacesImplementsInterfacesParserRuleCall_3_0());
				}
				lv_implementsInterfaces_3_0=ruleImplementsInterfaces
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceTypeDefinitionRule());
					}
					set(
						$current,
						"implementsInterfaces",
						lv_implementsInterfaces_3_0,
						"com.intuit.graphql.GraphQL.ImplementsInterfaces");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceTypeDefinitionAccess().getDirectivesDirectiveParserRuleCall_4_0());
				}
				lv_directives_4_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceTypeDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_4_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getInterfaceTypeDefinitionAccess().getLeftCurlyBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInterfaceTypeDefinitionAccess().getFieldDefinitionFieldDefinitionParserRuleCall_5_1_0());
					}
					lv_fieldDefinition_6_0=ruleFieldDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterfaceTypeDefinitionRule());
						}
						add(
							$current,
							"fieldDefinition",
							lv_fieldDefinition_6_0,
							"com.intuit.graphql.GraphQL.FieldDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getInterfaceTypeDefinitionAccess().getRightCurlyBracketKeyword_5_2());
			}
		)?
	)
;

// Entry rule entryRuleInterfaceTypeExtensionDefinition
entryRuleInterfaceTypeExtensionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceTypeExtensionDefinitionRule()); }
	iv_ruleInterfaceTypeExtensionDefinition=ruleInterfaceTypeExtensionDefinition
	{ $current=$iv_ruleInterfaceTypeExtensionDefinition.current; }
	EOF;

// Rule InterfaceTypeExtensionDefinition
ruleInterfaceTypeExtensionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extend'
		{
			newLeafNode(otherlv_0, grammarAccess.getInterfaceTypeExtensionDefinitionAccess().getExtendKeyword_0());
		}
		otherlv_1='interface'
		{
			newLeafNode(otherlv_1, grammarAccess.getInterfaceTypeExtensionDefinitionAccess().getInterfaceKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceTypeExtensionDefinitionAccess().getNameNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceTypeExtensionDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceTypeExtensionDefinitionAccess().getImplementsInterfacesImplementsInterfacesParserRuleCall_3_0());
				}
				lv_implementsInterfaces_3_0=ruleImplementsInterfaces
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceTypeExtensionDefinitionRule());
					}
					set(
						$current,
						"implementsInterfaces",
						lv_implementsInterfaces_3_0,
						"com.intuit.graphql.GraphQL.ImplementsInterfaces");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceTypeExtensionDefinitionAccess().getDirectivesDirectiveParserRuleCall_4_0());
				}
				lv_directives_4_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceTypeExtensionDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_4_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getInterfaceTypeExtensionDefinitionAccess().getLeftCurlyBracketKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInterfaceTypeExtensionDefinitionAccess().getFieldDefinitionFieldDefinitionParserRuleCall_5_1_0());
					}
					lv_fieldDefinition_6_0=ruleFieldDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterfaceTypeExtensionDefinitionRule());
						}
						add(
							$current,
							"fieldDefinition",
							lv_fieldDefinition_6_0,
							"com.intuit.graphql.GraphQL.FieldDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getInterfaceTypeExtensionDefinitionAccess().getRightCurlyBracketKeyword_5_2());
			}
		)?
	)
;

// Entry rule entryRuleUnionTypeDefinition
entryRuleUnionTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnionTypeDefinitionRule()); }
	iv_ruleUnionTypeDefinition=ruleUnionTypeDefinition
	{ $current=$iv_ruleUnionTypeDefinition.current; }
	EOF;

// Rule UnionTypeDefinition
ruleUnionTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getUnionTypeDefinitionAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnionTypeDefinitionRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='union'
		{
			newLeafNode(otherlv_1, grammarAccess.getUnionTypeDefinitionAccess().getUnionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnionTypeDefinitionAccess().getNameNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnionTypeDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnionTypeDefinitionAccess().getDirectivesDirectiveParserRuleCall_3_0());
				}
				lv_directives_3_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnionTypeDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_3_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getUnionTypeDefinitionAccess().getUnionMemberShipUnionMemberShipParserRuleCall_4_0());
				}
				lv_unionMemberShip_4_0=ruleUnionMemberShip
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnionTypeDefinitionRule());
					}
					set(
						$current,
						"unionMemberShip",
						lv_unionMemberShip_4_0,
						"com.intuit.graphql.GraphQL.UnionMemberShip");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleUnionMemberShip
entryRuleUnionMemberShip returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnionMemberShipRule()); }
	iv_ruleUnionMemberShip=ruleUnionMemberShip
	{ $current=$iv_ruleUnionMemberShip.current; }
	EOF;

// Rule UnionMemberShip
ruleUnionMemberShip returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='='
		{
			newLeafNode(otherlv_0, grammarAccess.getUnionMemberShipAccess().getEqualsSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnionMemberShipAccess().getUnionMembersUnionMembersParserRuleCall_1_0());
				}
				lv_unionMembers_1_0=ruleUnionMembers
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnionMemberShipRule());
					}
					set(
						$current,
						"unionMembers",
						lv_unionMembers_1_0,
						"com.intuit.graphql.GraphQL.UnionMembers");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUnionMembers
entryRuleUnionMembers returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnionMembersRule()); }
	iv_ruleUnionMembers=ruleUnionMembers
	{ $current=$iv_ruleUnionMembers.current; }
	EOF;

// Rule UnionMembers
ruleUnionMembers returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getUnionMembersAccess().getNamedUnionNamedTypeParserRuleCall_0_0());
				}
				lv_namedUnion_0_0=ruleNamedType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnionMembersRule());
					}
					add(
						$current,
						"namedUnion",
						lv_namedUnion_0_0,
						"com.intuit.graphql.GraphQL.NamedType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='|'
			{
				newLeafNode(otherlv_1, grammarAccess.getUnionMembersAccess().getVerticalLineKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnionMembersAccess().getNamedUnionNamedTypeParserRuleCall_1_1_0());
					}
					lv_namedUnion_2_0=ruleNamedType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnionMembersRule());
						}
						add(
							$current,
							"namedUnion",
							lv_namedUnion_2_0,
							"com.intuit.graphql.GraphQL.NamedType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUnionTypeExtensionDefinition
entryRuleUnionTypeExtensionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnionTypeExtensionDefinitionRule()); }
	iv_ruleUnionTypeExtensionDefinition=ruleUnionTypeExtensionDefinition
	{ $current=$iv_ruleUnionTypeExtensionDefinition.current; }
	EOF;

// Rule UnionTypeExtensionDefinition
ruleUnionTypeExtensionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extend'
		{
			newLeafNode(otherlv_0, grammarAccess.getUnionTypeExtensionDefinitionAccess().getExtendKeyword_0());
		}
		otherlv_1='union'
		{
			newLeafNode(otherlv_1, grammarAccess.getUnionTypeExtensionDefinitionAccess().getUnionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnionTypeExtensionDefinitionAccess().getNameNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnionTypeExtensionDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnionTypeExtensionDefinitionAccess().getDirectivesDirectiveParserRuleCall_3_0());
				}
				lv_directives_3_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnionTypeExtensionDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_3_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getUnionTypeExtensionDefinitionAccess().getUnionMemberShipUnionMemberShipParserRuleCall_4_0());
				}
				lv_unionMemberShip_4_0=ruleUnionMemberShip
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnionTypeExtensionDefinitionRule());
					}
					set(
						$current,
						"unionMemberShip",
						lv_unionMemberShip_4_0,
						"com.intuit.graphql.GraphQL.UnionMemberShip");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleEnumTypeDefinition
entryRuleEnumTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumTypeDefinitionRule()); }
	iv_ruleEnumTypeDefinition=ruleEnumTypeDefinition
	{ $current=$iv_ruleEnumTypeDefinition.current; }
	EOF;

// Rule EnumTypeDefinition
ruleEnumTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumTypeDefinitionAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumTypeDefinitionRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='enum'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumTypeDefinitionAccess().getEnumKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumTypeDefinitionAccess().getNameNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumTypeDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumTypeDefinitionAccess().getDirectivesDirectiveParserRuleCall_3_0());
				}
				lv_directives_3_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumTypeDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_3_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getEnumTypeDefinitionAccess().getLeftCurlyBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumTypeDefinitionAccess().getEnumValueDefinitionEnumValueDefinitionParserRuleCall_4_1_0());
					}
					lv_enumValueDefinition_5_0=ruleEnumValueDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumTypeDefinitionRule());
						}
						add(
							$current,
							"enumValueDefinition",
							lv_enumValueDefinition_5_0,
							"com.intuit.graphql.GraphQL.EnumValueDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getEnumTypeDefinitionAccess().getRightCurlyBracketKeyword_4_2());
			}
		)?
	)
;

// Entry rule entryRuleEnumValueDefinition
entryRuleEnumValueDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumValueDefinitionRule()); }
	iv_ruleEnumValueDefinition=ruleEnumValueDefinition
	{ $current=$iv_ruleEnumValueDefinition.current; }
	EOF;

// Rule EnumValueDefinition
ruleEnumValueDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumValueDefinitionAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumValueDefinitionRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumValueDefinitionAccess().getEnumValueEnumValueParserRuleCall_1_0());
				}
				lv_enumValue_1_0=ruleEnumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumValueDefinitionRule());
					}
					set(
						$current,
						"enumValue",
						lv_enumValue_1_0,
						"com.intuit.graphql.GraphQL.EnumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumValueDefinitionAccess().getDirectivesDirectiveParserRuleCall_2_0());
				}
				lv_directives_2_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumValueDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_2_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getEnumValueDefinitionAccess().getCommaKeyword_3());
			}
		)?
	)
;

// Entry rule entryRuleEnumTypeExtensionDefinition
entryRuleEnumTypeExtensionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumTypeExtensionDefinitionRule()); }
	iv_ruleEnumTypeExtensionDefinition=ruleEnumTypeExtensionDefinition
	{ $current=$iv_ruleEnumTypeExtensionDefinition.current; }
	EOF;

// Rule EnumTypeExtensionDefinition
ruleEnumTypeExtensionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extend'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumTypeExtensionDefinitionAccess().getExtendKeyword_0());
		}
		otherlv_1='enum'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumTypeExtensionDefinitionAccess().getEnumKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumTypeExtensionDefinitionAccess().getNameNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumTypeExtensionDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumTypeExtensionDefinitionAccess().getDirectivesDirectiveParserRuleCall_3_0());
				}
				lv_directives_3_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumTypeExtensionDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_3_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getEnumTypeExtensionDefinitionAccess().getLeftCurlyBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumTypeExtensionDefinitionAccess().getEnumValueDefinitionEnumValueDefinitionParserRuleCall_4_1_0());
					}
					lv_enumValueDefinition_5_0=ruleEnumValueDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumTypeExtensionDefinitionRule());
						}
						add(
							$current,
							"enumValueDefinition",
							lv_enumValueDefinition_5_0,
							"com.intuit.graphql.GraphQL.EnumValueDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getEnumTypeExtensionDefinitionAccess().getRightCurlyBracketKeyword_4_2());
			}
		)?
	)
;

// Entry rule entryRuleInputObjectTypeDefinition
entryRuleInputObjectTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputObjectTypeDefinitionRule()); }
	iv_ruleInputObjectTypeDefinition=ruleInputObjectTypeDefinition
	{ $current=$iv_ruleInputObjectTypeDefinition.current; }
	EOF;

// Rule InputObjectTypeDefinition
ruleInputObjectTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInputObjectTypeDefinitionAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputObjectTypeDefinitionRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='input'
		{
			newLeafNode(otherlv_1, grammarAccess.getInputObjectTypeDefinitionAccess().getInputKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputObjectTypeDefinitionAccess().getNameNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputObjectTypeDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInputObjectTypeDefinitionAccess().getDirectivesDirectiveParserRuleCall_3_0());
				}
				lv_directives_3_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputObjectTypeDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_3_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getInputObjectTypeDefinitionAccess().getLeftCurlyBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInputObjectTypeDefinitionAccess().getInputValueDefinitionInputValueDefinitionParserRuleCall_4_1_0());
					}
					lv_inputValueDefinition_5_0=ruleInputValueDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputObjectTypeDefinitionRule());
						}
						add(
							$current,
							"inputValueDefinition",
							lv_inputValueDefinition_5_0,
							"com.intuit.graphql.GraphQL.InputValueDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getInputObjectTypeDefinitionAccess().getRightCurlyBracketKeyword_4_2());
			}
		)?
	)
;

// Entry rule entryRuleInputObjectTypeExtensionDefinition
entryRuleInputObjectTypeExtensionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputObjectTypeExtensionDefinitionRule()); }
	iv_ruleInputObjectTypeExtensionDefinition=ruleInputObjectTypeExtensionDefinition
	{ $current=$iv_ruleInputObjectTypeExtensionDefinition.current; }
	EOF;

// Rule InputObjectTypeExtensionDefinition
ruleInputObjectTypeExtensionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extend'
		{
			newLeafNode(otherlv_0, grammarAccess.getInputObjectTypeExtensionDefinitionAccess().getExtendKeyword_0());
		}
		otherlv_1='input'
		{
			newLeafNode(otherlv_1, grammarAccess.getInputObjectTypeExtensionDefinitionAccess().getInputKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputObjectTypeExtensionDefinitionAccess().getNameNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputObjectTypeExtensionDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInputObjectTypeExtensionDefinitionAccess().getDirectivesDirectiveParserRuleCall_3_0());
				}
				lv_directives_3_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputObjectTypeExtensionDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_3_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getInputObjectTypeExtensionDefinitionAccess().getLeftCurlyBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInputObjectTypeExtensionDefinitionAccess().getInputValueDefinitionInputValueDefinitionParserRuleCall_4_1_0());
					}
					lv_inputValueDefinition_5_0=ruleInputValueDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputObjectTypeExtensionDefinitionRule());
						}
						add(
							$current,
							"inputValueDefinition",
							lv_inputValueDefinition_5_0,
							"com.intuit.graphql.GraphQL.InputValueDefinition");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6='}'
			{
				newLeafNode(otherlv_6, grammarAccess.getInputObjectTypeExtensionDefinitionAccess().getRightCurlyBracketKeyword_4_2());
			}
		)?
	)
;

// Entry rule entryRuleImplementsInterfaces
entryRuleImplementsInterfaces returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplementsInterfacesRule()); }
	iv_ruleImplementsInterfaces=ruleImplementsInterfaces
	{ $current=$iv_ruleImplementsInterfaces.current; }
	EOF;

// Rule ImplementsInterfaces
ruleImplementsInterfaces returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='implements'
		{
			newLeafNode(otherlv_0, grammarAccess.getImplementsInterfacesAccess().getImplementsKeyword_0());
		}
		(
			otherlv_1='&'
			{
				newLeafNode(otherlv_1, grammarAccess.getImplementsInterfacesAccess().getAmpersandKeyword_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getImplementsInterfacesAccess().getNamedTypeNamedTypeParserRuleCall_2_0());
				}
				lv_namedType_2_0=ruleNamedType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplementsInterfacesRule());
					}
					add(
						$current,
						"namedType",
						lv_namedType_2_0,
						"com.intuit.graphql.GraphQL.NamedType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='&'
			{
				newLeafNode(otherlv_3, grammarAccess.getImplementsInterfacesAccess().getAmpersandKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImplementsInterfacesAccess().getNamedTypeNamedTypeParserRuleCall_3_1_0());
					}
					lv_namedType_4_0=ruleNamedType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImplementsInterfacesRule());
						}
						add(
							$current,
							"namedType",
							lv_namedType_4_0,
							"com.intuit.graphql.GraphQL.NamedType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFieldDefinition
entryRuleFieldDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldDefinitionRule()); }
	iv_ruleFieldDefinition=ruleFieldDefinition
	{ $current=$iv_ruleFieldDefinition.current; }
	EOF;

// Rule FieldDefinition
ruleFieldDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldDefinitionAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldDefinitionRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldDefinitionAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldDefinitionAccess().getArgumentsDefinitionArgumentsDefinitionParserRuleCall_2_0());
				}
				lv_argumentsDefinition_2_0=ruleArgumentsDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldDefinitionRule());
					}
					set(
						$current,
						"argumentsDefinition",
						lv_argumentsDefinition_2_0,
						"com.intuit.graphql.GraphQL.ArgumentsDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getFieldDefinitionAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldDefinitionAccess().getNamedTypeNamedTypeParserRuleCall_4_0());
				}
				lv_namedType_4_0=ruleNamedType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldDefinitionRule());
					}
					set(
						$current,
						"namedType",
						lv_namedType_4_0,
						"com.intuit.graphql.GraphQL.NamedType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldDefinitionAccess().getDirectivesDirectiveParserRuleCall_5_0());
				}
				lv_directives_5_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_5_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getFieldDefinitionAccess().getCommaKeyword_6());
			}
		)?
	)
;

// Entry rule entryRuleArgumentsDefinition
entryRuleArgumentsDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentsDefinitionRule()); }
	iv_ruleArgumentsDefinition=ruleArgumentsDefinition
	{ $current=$iv_ruleArgumentsDefinition.current; }
	EOF;

// Rule ArgumentsDefinition
ruleArgumentsDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getArgumentsDefinitionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentsDefinitionAccess().getInputValueDefinitionInputValueDefinitionParserRuleCall_1_0());
				}
				lv_inputValueDefinition_1_0=ruleInputValueDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentsDefinitionRule());
					}
					add(
						$current,
						"inputValueDefinition",
						lv_inputValueDefinition_1_0,
						"com.intuit.graphql.GraphQL.InputValueDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getArgumentsDefinitionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleInputValueDefinition
entryRuleInputValueDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputValueDefinitionRule()); }
	iv_ruleInputValueDefinition=ruleInputValueDefinition
	{ $current=$iv_ruleInputValueDefinition.current; }
	EOF;

// Rule InputValueDefinition
ruleInputValueDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInputValueDefinitionAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputValueDefinitionRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getInputValueDefinitionAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputValueDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getInputValueDefinitionAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputValueDefinitionAccess().getNamedTypeNamedTypeParserRuleCall_3_0());
				}
				lv_namedType_3_0=ruleNamedType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputValueDefinitionRule());
					}
					set(
						$current,
						"namedType",
						lv_namedType_3_0,
						"com.intuit.graphql.GraphQL.NamedType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getInputValueDefinitionAccess().getEqualsSignKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInputValueDefinitionAccess().getDefaultValueValueParserRuleCall_4_1_0());
					}
					lv_defaultValue_5_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputValueDefinitionRule());
						}
						set(
							$current,
							"defaultValue",
							lv_defaultValue_5_0,
							"com.intuit.graphql.GraphQL.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getInputValueDefinitionAccess().getDirectivesDirectiveParserRuleCall_5_0());
				}
				lv_directives_6_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputValueDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_6_0,
						"com.intuit.graphql.GraphQL.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getInputValueDefinitionAccess().getCommaKeyword_6());
			}
		)?
	)
;

// Entry rule entryRuleQDirective
entryRuleQDirective returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQDirectiveRule()); }
	iv_ruleQDirective=ruleQDirective
	{ $current=$iv_ruleQDirective.current; }
	EOF;

// Rule QDirective
ruleQDirective returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getQDirectiveAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQDirectiveAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQDirectiveRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getQDirectiveRule());
				}
				newCompositeNode(grammarAccess.getQDirectiveAccess().getArgumentsParserRuleCall_2());
			}
			this_Arguments_2=ruleArguments[$current]
			{
				$current = $this_Arguments_2.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleDirective
entryRuleDirective returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectiveRule()); }
	iv_ruleDirective=ruleDirective
	{ $current=$iv_ruleDirective.current; }
	EOF;

// Rule Directive
ruleDirective returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getDirectiveAccess().getCommercialAtKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDirectiveRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDirectiveAccess().getDefinitionDirectiveDefinitionCrossReference_1_0());
				}
			)
		)
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDirectiveRule());
				}
				newCompositeNode(grammarAccess.getDirectiveAccess().getArgumentsParserRuleCall_2());
			}
			this_Arguments_2=ruleArguments[$current]
			{
				$current = $this_Arguments_2.current;
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleDirectiveDefinition
entryRuleDirectiveDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectiveDefinitionRule()); }
	iv_ruleDirectiveDefinition=ruleDirectiveDefinition
	{ $current=$iv_ruleDirectiveDefinition.current; }
	EOF;

// Rule DirectiveDefinition
ruleDirectiveDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectiveDefinitionAccess().getDescStringValueParserRuleCall_0_0());
				}
				lv_desc_0_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectiveDefinitionRule());
					}
					set(
						$current,
						"desc",
						lv_desc_0_0,
						"com.intuit.graphql.GraphQL.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='directive'
		{
			newLeafNode(otherlv_1, grammarAccess.getDirectiveDefinitionAccess().getDirectiveKeyword_1());
		}
		otherlv_2='@'
		{
			newLeafNode(otherlv_2, grammarAccess.getDirectiveDefinitionAccess().getCommercialAtKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectiveDefinitionAccess().getNameNameParserRuleCall_3_0());
				}
				lv_name_3_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectiveDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"com.intuit.graphql.GraphQL.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectiveDefinitionAccess().getArgumentsDefinitionArgumentsDefinitionParserRuleCall_4_0());
				}
				lv_argumentsDefinition_4_0=ruleArgumentsDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectiveDefinitionRule());
					}
					set(
						$current,
						"argumentsDefinition",
						lv_argumentsDefinition_4_0,
						"com.intuit.graphql.GraphQL.ArgumentsDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_repeatable_5_0='repeatable'
				{
					newLeafNode(lv_repeatable_5_0, grammarAccess.getDirectiveDefinitionAccess().getRepeatableRepeatableKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDirectiveDefinitionRule());
					}
					setWithLastConsumed($current, "repeatable", lv_repeatable_5_0 != null, "repeatable");
				}
			)
		)?
		otherlv_6='on'
		{
			newLeafNode(otherlv_6, grammarAccess.getDirectiveDefinitionAccess().getOnKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectiveDefinitionAccess().getDirectiveLocationsDirectiveLocationParserRuleCall_7_0());
				}
				lv_directiveLocations_7_0=ruleDirectiveLocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectiveDefinitionRule());
					}
					add(
						$current,
						"directiveLocations",
						lv_directiveLocations_7_0,
						"com.intuit.graphql.GraphQL.DirectiveLocation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8='|'
			{
				newLeafNode(otherlv_8, grammarAccess.getDirectiveDefinitionAccess().getVerticalLineKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDirectiveDefinitionAccess().getDirectiveLocationsDirectiveLocationParserRuleCall_8_1_0());
					}
					lv_directiveLocations_9_0=ruleDirectiveLocation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDirectiveDefinitionRule());
						}
						add(
							$current,
							"directiveLocations",
							lv_directiveLocations_9_0,
							"com.intuit.graphql.GraphQL.DirectiveLocation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDirectiveLocation
entryRuleDirectiveLocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectiveLocationRule()); }
	iv_ruleDirectiveLocation=ruleDirectiveLocation
	{ $current=$iv_ruleDirectiveLocation.current; }
	EOF;

// Rule DirectiveLocation
ruleDirectiveLocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDirectiveLocationAccess().getNamedDirectiveNameParserRuleCall_0());
			}
			lv_namedDirective_0_0=ruleName
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDirectiveLocationRule());
				}
				set(
					$current,
					"namedDirective",
					lv_namedDirective_0_0,
					"com.intuit.graphql.GraphQL.Name");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBooleanValueRule()); }
	iv_ruleBooleanValue=ruleBooleanValue
	{ $current=$iv_ruleBooleanValue.current.getText(); }
	EOF;

// Rule BooleanValue
ruleBooleanValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleNullValue
entryRuleNullValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNullValueRule()); }
	iv_ruleNullValue=ruleNullValue
	{ $current=$iv_ruleNullValue.current.getText(); }
	EOF;

// Rule NullValue
ruleNullValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='null'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getNullValueAccess().getNullKeyword());
	}
;

// Entry rule entryRuleIntValue
entryRuleIntValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIntValueRule()); }
	iv_ruleIntValue=ruleIntValue
	{ $current=$iv_ruleIntValue.current.getText(); }
	EOF;

// Rule IntValue
ruleIntValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_SIGN_0=RULE_SIGN
			{
				$current.merge(this_SIGN_0);
			}
			{
				newLeafNode(this_SIGN_0, grammarAccess.getIntValueAccess().getSIGNTerminalRuleCall_0());
			}
		)?
		{
			newCompositeNode(grammarAccess.getIntValueAccess().getIntegerPartParserRuleCall_1());
		}
		this_IntegerPart_1=ruleIntegerPart
		{
			$current.merge(this_IntegerPart_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFloatValue
entryRuleFloatValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFloatValueRule()); }
	iv_ruleFloatValue=ruleFloatValue
	{ $current=$iv_ruleFloatValue.current.getText(); }
	EOF;

// Rule FloatValue
ruleFloatValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_SIGN_0=RULE_SIGN
			{
				$current.merge(this_SIGN_0);
			}
			{
				newLeafNode(this_SIGN_0, grammarAccess.getFloatValueAccess().getSIGNTerminalRuleCall_0());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFloatValueAccess().getIntegerPartParserRuleCall_1_0_0());
				}
				this_IntegerPart_1=ruleIntegerPart
				{
					$current.merge(this_IntegerPart_1);
				}
				{
					afterParserOrEnumRuleCall();
				}
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFloatValueAccess().getFullStopKeyword_1_0_1());
				}
				{
					newCompositeNode(grammarAccess.getFloatValueAccess().getIntegerPartParserRuleCall_1_0_2());
				}
				this_IntegerPart_3=ruleIntegerPart
				{
					$current.merge(this_IntegerPart_3);
				}
				{
					afterParserOrEnumRuleCall();
				}
				(
					this_EXPONENT_PART_4=RULE_EXPONENT_PART
					{
						$current.merge(this_EXPONENT_PART_4);
					}
					{
						newLeafNode(this_EXPONENT_PART_4, grammarAccess.getFloatValueAccess().getEXPONENT_PARTTerminalRuleCall_1_0_3());
					}
				)?
			)
			    |
			(
				{
					newCompositeNode(grammarAccess.getFloatValueAccess().getIntegerPartParserRuleCall_1_1_0());
				}
				this_IntegerPart_5=ruleIntegerPart
				{
					$current.merge(this_IntegerPart_5);
				}
				{
					afterParserOrEnumRuleCall();
				}
				this_EXPONENT_PART_6=RULE_EXPONENT_PART
				{
					$current.merge(this_EXPONENT_PART_6);
				}
				{
					newLeafNode(this_EXPONENT_PART_6, grammarAccess.getFloatValueAccess().getEXPONENT_PARTTerminalRuleCall_1_1_1());
				}
			)
		)
	)
;

// Entry rule entryRuleStringValue
entryRuleStringValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStringValueRule()); }
	iv_ruleStringValue=ruleStringValue
	{ $current=$iv_ruleStringValue.current.getText(); }
	EOF;

// Rule StringValue
ruleStringValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getStringValueAccess().getSTRINGTerminalRuleCall());
	}
;

// Entry rule entryRuleIntegerPart
entryRuleIntegerPart returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIntegerPartRule()); }
	iv_ruleIntegerPart=ruleIntegerPart
	{ $current=$iv_ruleIntegerPart.current.getText(); }
	EOF;

// Rule IntegerPart
ruleIntegerPart returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getIntegerPartAccess().getINTTerminalRuleCall());
	}
;

// Rule OperationType
ruleOperationType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='query'
			{
				$current = grammarAccess.getOperationTypeAccess().getQUERYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperationTypeAccess().getQUERYEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='mutation'
			{
				$current = grammarAccess.getOperationTypeAccess().getMUTATIONEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperationTypeAccess().getMUTATIONEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='subscription'
			{
				$current = grammarAccess.getOperationTypeAccess().getSUBSCRIPTIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOperationTypeAccess().getSUBSCRIPTIONEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_SIGN : '-';

RULE_EXPONENT_PART : ('e'|'E') RULE_SIGN? RULE_INT;

RULE_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\''|'"""' ( options {greedy=false;} : . )*'"""'|'\'\'\'' ( options {greedy=false;} : . )*'\'\'\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
